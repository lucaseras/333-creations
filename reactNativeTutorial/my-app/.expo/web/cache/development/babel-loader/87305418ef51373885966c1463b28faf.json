{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/lucaseras/Developer/333-se/lecture-slides/6_React_Native/my-app/App.js\";\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport openImagePickerAsync from \"./imagePicker\";\nimport openShareDialogAsync from \"./share\";\nimport { styles } from \"./styles\";\nexport default function App() {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedImage = _React$useState2[0],\n      setSelectedImage = _React$useState2[1];\n\n  if (selectedImage !== null) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: selectedImage.localUri\n      },\n      style: styles.thumbnail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }), React.createElement(Pressable, {\n      onPress: function onPress() {\n        return openShareDialogAsync(selectedImage);\n      },\n      style: styles.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 10\n      }\n    }, \"Share this photo\")));\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: 'https://i.imgur.com/TkIrScD.png'\n    },\n    style: styles.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"To share a photo from your phone with a friend, just press the button below!\"), React.createElement(Pressable, {\n    hitSlop: 30,\n    onPress: function _callee() {\n      var image;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(openImagePickerAsync());\n\n            case 2:\n              image = _context.sent;\n              image ? setSelectedImage(image) : null;\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Pick a photo\")));\n}","map":{"version":3,"sources":["/Users/lucaseras/Developer/333-se/lecture-slides/6_React_Native/my-app/App.js"],"names":["React","openImagePickerAsync","openShareDialogAsync","styles","App","useState","selectedImage","setSelectedImage","container","uri","localUri","thumbnail","button","buttonText","logo","instructions","image"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,oBAAP;AACA,OAAOC,oBAAP;AACA,SAAQC,MAAR;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,wBACYJ,KAAK,CAACK,QAAN,CAAe,IAAf,CADZ;AAAA;AAAA,MACvBC,aADuB;AAAA,MACRC,gBADQ;;AAG5B,MAAID,aAAa,KAAK,IAAtB,EAA4B;AAC1B,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACK,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAEH,aAAa,CAACI;AAArB,OAAf;AAAgD,MAAA,KAAK,EAAEP,MAAM,CAACQ,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAE;AAAA,eAAMT,oBAAoB,CAACI,aAAD,CAA1B;AAAA,OAApB;AAA+D,MAAA,KAAK,EAAEH,MAAM,CAACS,MAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAET,MAAM,CAACU,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADD,CAFF,CADF;AAQD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACK,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAAf;AAA2D,IAAA,KAAK,EAAEN,MAAM,CAACW,IAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACY,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oFAFF,EAME,oBAAC,SAAD;AACE,IAAA,OAAO,EAAE,EADX;AAEE,IAAA,OAAO,EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACYd,oBAAoB,EADhC;;AAAA;AACFe,cAAAA,KADE;AAENA,cAAAA,KAAK,GAAGT,gBAAgB,CAACS,KAAD,CAAnB,GAA6B,IAAlC;;AAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFZ;AAOE,IAAA,KAAK,EAAEb,MAAM,CAACS,MAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACU,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,CANF,CADF;AAmBD","sourcesContent":["import React from 'react';\nimport { Image, Text, Pressable, View } from 'react-native';\nimport openImagePickerAsync from './imagePicker';\nimport openShareDialogAsync from './share';\nimport {styles} from './styles';\n\nexport default function App() {\n  let [selectedImage, setSelectedImage] = React.useState(null);\n\n  if (selectedImage !== null) {\n    return (\n      <View style={styles.container}>\n        <Image source={{ uri: selectedImage.localUri }} style={styles.thumbnail} />\n        <Pressable onPress={() => openShareDialogAsync(selectedImage)} style={styles.button}>\n         <Text style={styles.buttonText}>Share this photo</Text>\n        </Pressable>\n        </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <Image source={{ uri: 'https://i.imgur.com/TkIrScD.png' }} style={styles.logo} />\n      <Text style={styles.instructions}>\n        To share a photo from your phone with a friend, just press the button below!\n      </Text>\n\n      <Pressable\n        hitSlop={30}\n        onPress={ async () => {\n            let image = await openImagePickerAsync();\n            image ? setSelectedImage(image) : null\n            }\n        }\n        style={styles.button}>\n        <Text style={styles.buttonText}>Pick a photo</Text>\n      </Pressable>\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}